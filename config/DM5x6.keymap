#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESC  &kp N1    &kp N2    &kp N3  &kp N4          &kp N5                                     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0   &kp BSPC
&kp GRAVE   &kp Q     &kp W     &kp E   &kp R           &kp T                                      &kp Y      &kp U      &kp I      &kp O     &kp P  &kp MINUS
  &kp TAB   &kp A     &kp S     &kp D   &kp F           &kp G                                      &kp H      &kp J      &kp K      &kp L  &kp SEMI    &kp SQT
 &kp CAPS   &kp Z     &kp X     &kp C   &kp V           &kp B                                      &kp N      &kp M  &kp COMMA    &kp DOT  &kp FSLH   &kp BSLH
                   &kp LBKT  &kp RBKT                                                                                 &kp PLUS  &kp EQUAL
                                       &tog 1       &kp SPACE                                  &kp SPACE  &kp ENTER
                                               &kp LEFT_SHIFT  &kp LCTRL      &kp RCTRL  &kp RIGHT_SHIFT
                                                 &kp LEFT_WIN   &kp LALT  &kp RIGHT_ALT    &kp RIGHT_WIN
            >;
        };

        lower_layer {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                          &kp F6          &kp F7        &kp F8           &kp F9    &kp F10  &kp F11
 &trans  &trans  &trans  &trans  &trans  &trans                          &trans          &trans     &kp LNLCK          &kp INS  &kp LSLCK   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW     &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                          &trans          &trans        &trans           &trans     &trans   &trans
                 &trans  &trans                                                                        &trans           &trans
                                 &tog 2  &trans                          &trans           &to 0
                                         &trans  &trans  &trans          &trans
                                         &trans  &trans  &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans     &trans     &trans     &trans  &trans       &kp DEL
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &kp KP_N7  &kp KP_N8  &kp KP_N9  &trans  &kp K_VOL_UP
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &kp KP_N4  &kp KP_N5  &kp KP_N6  &trans  &kp K_VOL_DN
    &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3  &trans    &kp K_MUTE
                            &bt BT_PRV    &bt BT_NXT                                                                    &trans  &kp KP_N0
                                                            &trans        &trans                  &trans      &to 0
                                                                          &trans  &trans  &trans  &trans
                                                                          &trans  &trans  &trans  &trans
            >;
        };
    };
};
